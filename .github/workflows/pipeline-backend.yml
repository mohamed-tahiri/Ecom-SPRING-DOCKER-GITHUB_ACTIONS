name: ECOM Backend API Pipeline

on:
  push:
    branches:
      - main

jobs:
  prepare-server:
    runs-on: self-hosted
    name: Prepare Server with Docker
    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          docker --version
          sudo usermod -aG docker $USER

  compile:
    runs-on: self-hosted
    name: Compile project
    needs: [prepare-server]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Compile project
        run: ./mvnw clean compile

  setup-docker-compose:
    runs-on: self-hosted
    name: Setup and Run Docker Compose
    needs: [prepare-server]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          # Remove existing symbolic link if it exists
          if [ -f /usr/bin/docker-compose ]; then
            sudo rm /usr/bin/docker-compose
          fi
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
          docker-compose --version
          newgrp docker

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Start Docker Compose
        run: |
          cd /home/ubuntu/actions-runner/_work/Ecom-SPRING-DOCKER-GITHUB_ACTIONS/Ecom-SPRING-DOCKER-GITHUB_ACTIONS
          newgrp docker
          docker-compose up -d

  unit-tests:
    runs-on: self-hosted
    name: Unit tests
    needs: [setup-docker-compose]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Run unit tests
        run: ./mvnw clean test

  build:
    runs-on: self-hosted
    name: Build backend
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Build project
        run: ./mvnw clean package

  build-image:
    runs-on: self-hosted
    name: Build Docker image
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Extract project version
        id: extract_version
        run: echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/ecom:1.0.0,${{ secrets.DOCKER_USERNAME }}/ecom:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
